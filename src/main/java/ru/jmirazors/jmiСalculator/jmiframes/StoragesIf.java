/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ru.jmirazors.jmiСalculator.jmiframes;

import ru.jmirazors.jmiCalculator.MainFrame;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JToolBar;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import ru.jmirazors.jmiCalculator.beans.ColorTablesRenderer;
import ru.jmirazors.jmiСalculator.DAO.StorageDAO;
import ru.jmirazors.jmiСalculator.entity.Storage;

/**
 *
 * @author User
 */
public final class StoragesIf extends javax.swing.JInternalFrame {
    JToolBar tb;
    JButton dockButton = new JButton("Склады");
    
    
    StringBuffer queryOption = new StringBuffer("from Storage where del=1");
    ColorTablesRenderer colorRenderer = new ColorTablesRenderer();

    DefaultTableModel tableModel = new DefaultTableModel(){
        @Override
        public boolean isCellEditable(int row, int col)
            { return false; }
    };
    DefaultTableCellRenderer cellRenderer = new DefaultTableCellRenderer() {
        JLabel label = new JLabel();
        ImageIcon iconNormal = new ImageIcon(getClass().getResource("/images/ellipsis-circle.png"));
        ImageIcon iconDel = new ImageIcon(getClass().getResource("/images/cancel-button.png"));
        
        @Override
        public Component getTableCellRendererComponent (JTable table, Object val, 
                boolean isSelected, boolean hasFocus, int row, int col) {
            //label.setText((String)val);
            if ((byte)val == 1)
                label.setIcon(iconNormal);
            if ((byte)val == 0)
                label.setIcon(iconDel);
            return label;
        }
    };
    /**
     * Creates new form StoragesIf
     * @param toolBar
     */
    public StoragesIf(JToolBar toolBar) {
        this.tb = toolBar;
          dockButton.addActionListener(new ActionListener() {
               @Override
               public void actionPerformed(ActionEvent evt) {
                    toggleState();
               }
          }); 
        tb.add(dockButton);        
        
        tableModel.addColumn("");
        tableModel.addColumn("№");
        tableModel.addColumn("Название");
        tableModel.addColumn("Описание");
        
        initComponents();
        
        jTable1.getColumnModel().getColumn(0).setMaxWidth(17);
        jTable1.getColumnModel().getColumn(1).setMaxWidth(32);
        jTable1.getColumnModel().getColumn(0).setCellRenderer(cellRenderer);
        jTable1.setDefaultRenderer(Object.class, colorRenderer);
        
        getStorageList();
        
    }
    // ******************************************************
     @Override
     public void dispose() {
          super.dispose();
          tb.remove(dockButton);
          tb.repaint();
          MainFrame.ifManager.setStoragesFrameOpen(false);
     }
     private void toggleState() {
          try {
               if(this.isVisible())
                    this.hide();
               else {
                    this.setIcon(false);
                    this.show(); 
               }
          } catch (Exception ex) {
               ex.printStackTrace();
          }
     }     
     // *******************************************************************    

    public void getStorageList() {
        
        if (jToggleButton1.isSelected()) 
            this.queryOption = new StringBuffer("from Storage");
        else
            queryOption = new StringBuffer("from Storage where del=1");
        
        for (int i=tableModel.getRowCount(); i > 0; i--) {
            tableModel.removeRow(i-1);
        }
        tableModel.setRowCount(0);
        
        try {
            
            List storages = new StorageDAO().list('e');
            Iterator it = storages.iterator();
            while (it.hasNext()) {
                Storage storage = (Storage)it.next(); 
                tableModel.addRow(new Object[]{storage.getDel(), storage.getId(), storage.getName(), storage.getDescr()});               
            }
            tableModel.fireTableDataChanged();
        } catch (Exception e) {System.out.print(e);}        
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBorder(new javax.swing.border.LineBorder(new java.awt.Color(204, 204, 204), 2, true));
        setClosable(true);
        setIconifiable(true);
        setTitle("Склады");
        setToolTipText("");
        setDoubleBuffered(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/images/factory-stock-house.png"))); // NOI18N
        setPreferredSize(new java.awt.Dimension(520, 280));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-with-pen-tool.png"))); // NOI18N
        jButton1.setToolTipText("Новый склад");
        jButton1.setDoubleBuffered(true);
        jButton1.setFocusPainted(false);
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jToggleButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/file_del.png"))); // NOI18N
        jToggleButton1.setToolTipText("Показать удаленные");
        jToggleButton1.setFocusPainted(false);
        jToggleButton1.setFocusable(false);
        jToggleButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jToggleButton1);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jTable1.setModel(tableModel);
        jTable1.setSelectionBackground(new java.awt.Color(204, 204, 255));
        jTable1.setShowVerticalLines(false);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
      StorageAddDialog storageAddDialog = new StorageAddDialog(null, true);
      storageAddDialog.setLocationRelativeTo(this);
      storageAddDialog.setVisible(true);
      getStorageList();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        
        if (evt.getClickCount() == 2) {
            StorageAddDialog storageAddDialog;            
            try {
                storageAddDialog = new StorageAddDialog(null, true, new StorageDAO().getStorage(tableModel.getValueAt(jTable1.getSelectedRow(), 1).toString()));
                storageAddDialog.setLocationRelativeTo(this);
                storageAddDialog.setVisible(true);
            } catch (Exception ex) {
                Logger.getLogger(StoragesIf.class.getName()).log(Level.SEVERE, null, ex);
            }
            getStorageList();
            }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        getStorageList();
        
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        

        if (evt.getKeyCode() == KeyEvent.VK_DELETE && jTable1.getSelectedRow() >= 0) {
            Storage storage = null;
            try {
                // TODO add your handling code here:  
                storage = new StorageDAO().getStorage(tableModel.getValueAt(jTable1.getSelectedRow(), 1).toString());            
            } catch (Exception ex) {
                Logger.getLogger(StoragesIf.class.getName()).log(Level.SEVERE, null, ex);
            }            
            
            int dialogResult = JOptionPane.showOptionDialog(null, "Удалить склад?", "Вопрос", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, new Object[]{"Да", "Нет"}, "Да");
            if (dialogResult == 0 && storage != null) {               
                storage.setDel((byte)0);
                try {
                    new StorageDAO().updateStorage(storage);
                    getStorageList();
                } catch (Exception ex) {
                    Logger.getLogger(StoragesIf.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                System.out.println("NO");
            }              
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        MainFrame.ifManager.setStoragesFrameOpen(false);
    }//GEN-LAST:event_formInternalFrameClosed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables

    private Object StorageDAO() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
